{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/MyNavbar/MyNavbar.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["Component","Disqus","props","_this","_Component","call","this","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","render","postNode","config","disqusShortname","post","frontmatter","url","urljoin","siteUrl","pathPrefix","fields","slug","react_default","a","createElement","main_default","shortname","identifier","title","category_id","onNewComment","PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","PostTemplate","_this$props","data","pageContext","markdownRemark","id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postPath","postSEO","dangerouslySetInnerHTML","__html","html","components_PostTags_PostTags","components_Disqus_Disqus","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","replace","substr","module","exports","MyNavbar","Fragment","Navbar_default","bg","expand","fixed","Brand","onClick","navigate","MainLayout","children","MyNavbar_MyNavbar","name","content","Container_default","description","image","postURL","postMeta","excerpt","cover","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-cf25d27dd4ceb66879ba.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Follow } from \"react-twitter-widgets\";\r\n\r\nclass UserInfo extends Component {\r\n  render() {\r\n    const { userTwitter } = this.props.config;\r\n    const { expanded } = this.props;\r\n    return (\r\n      <Follow\r\n        username={userTwitter}\r\n        options={{ count: expanded ? true : \"none\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { Component } from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass Disqus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\r\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\r\n  }\r\n\r\n  onSnackbarDismiss() {\r\n    const [, ...toasts] = this.state.toasts;\r\n    this.setState({ toasts });\r\n  }\r\n  notifyAboutComment() {\r\n    const toasts = this.state.toasts.slice();\r\n    toasts.push({ text: \"New comment available!\" });\r\n    this.setState({ toasts });\r\n  }\r\n  render() {\r\n    const { postNode } = this.props;\r\n    if (!config.disqusShortname) {\r\n      return null;\r\n    }\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(\r\n      config.siteUrl,\r\n      config.pathPrefix,\r\n      postNode.fields.slug\r\n    );\r\n    return (\r\n      <ReactDisqusComments\r\n        shortname={config.disqusShortname}\r\n        identifier={post.title}\r\n        title={post.title}\r\n        url={url}\r\n        category_id={post.category_id}\r\n        onNewComment={this.notifyAboutComment}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disqus;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { tags } = this.props;\r\n    return (\r\n      <div className=\"post-tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link\r\n              key={tag}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/tags/${_.kebabCase(tag)}`}\r\n            >\r\n              <button>{tag}</button>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  RedditShareButton,\r\n  FacebookShareCount,\r\n  LinkedinShareCount,\r\n  RedditShareCount,\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  TelegramIcon,\r\n  LinkedinIcon,\r\n  RedditIcon\r\n} from \"react-share\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./SocialLinks.css\";\r\n\r\nclass SocialLinks extends Component {\r\n  render() {\r\n    const { postNode, postPath, mobile } = this.props;\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    const iconSize = mobile ? 36 : 48;\r\n    const filter = count => (count > 0 ? count : \"\");\r\n    const renderShareCount = count => (\r\n      <div className=\"share-count\">{filter(count)}</div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"social-links\">\r\n        <RedditShareButton url={url} title={post.title}>\r\n          <RedditIcon round size={iconSize} />\r\n          <RedditShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </RedditShareCount>\r\n        </RedditShareButton>\r\n        <TwitterShareButton url={url} title={post.title}>\r\n          <TwitterIcon round size={iconSize} />\r\n        </TwitterShareButton>\r\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\r\n          <FacebookIcon round size={iconSize} />\r\n          <FacebookShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </FacebookShareCount>\r\n        </FacebookShareButton>\r\n        <LinkedinShareButton\r\n          url={url}\r\n          title={post.title}\r\n          description={postNode.excerpt}\r\n        >\r\n          <LinkedinIcon round size={iconSize} />\r\n          <LinkedinShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </LinkedinShareCount>\r\n        </LinkedinShareButton>\r\n        <TelegramShareButton url={url}>\r\n          <TelegramIcon round size={iconSize} />\r\n        </TelegramShareButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialLinks;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport UserInfo from \"../components/UserInfo/UserInfo\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./b16-tomorrow-dark.css\";\r\nimport \"./post.css\";\r\n\r\nexport default class PostTemplate extends React.Component {\r\n  render() {\r\n    const { data, pageContext } = this.props;\r\n    const { slug } = pageContext;\r\n    const postNode = data.markdownRemark;\r\n    const post = postNode.frontmatter;\r\n    if (!post.id) {\r\n      post.id = slug;\r\n    }\r\n    if (!post.category_id) {\r\n      post.category_id = config.postDefaultCategoryID;\r\n    }\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n          <div>\r\n            <h1>{post.title}</h1>\r\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n            <div className=\"post-meta\">\r\n              <PostTags tags={post.tags} />\r\n            </div>\r\n            <Disqus postNode={postNode} />\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"temp23\", // Site title.\r\n  siteTitleShort: \"temp23\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"Temptemp3's blog\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://temptemp3.github.io\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"Articles written by Temptemp3\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"UA-104620931-1\", // GA tracking ID.\r\n  disqusShortname: \"temptemp3\", // Disqus shortname.\r\n  postDefaultCategoryID: \"blog\", // Default category for posts.\r\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\r\n  userName: \"\", // Username to display in the author segment.\r\n  userEmail: \"\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\r\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: \"GitHub\",\r\n      url: \"https://github.com/temptemp3\",\r\n      iconClassName: \"fa fa-github\"\r\n    }\r\n  ],\r\n  copyright: \"Copyright © 2019. temptemp3\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React, { Component } from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nexport default class MyNavbar extends Component {\r\n  render() {\r\n    return <>\r\n<Navbar bg=\"light\" expand=\"lg\" fixed={this.props.fixed}>\r\n  <Navbar.Brand onClick={()=>{navigate(\"/\")}}>\r\n  {config.siteTitle}\r\n  </Navbar.Brand>\r\n</Navbar>\r\n    </>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\nimport MyNavbar from \"../components/MyNavbar/MyNavbar\"\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n      <MyNavbar />\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n\t<Container className=\"pt-3\">\r\n\t  {children}\r\n\t</Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}