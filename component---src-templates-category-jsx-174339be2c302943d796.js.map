{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/MyNavbar/MyNavbar.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","MyNavbar","react_default","Fragment","Navbar_default","bg","expand","fixed","Brand","onClick","navigate","MainLayout","children","MyNavbar_MyNavbar","Helmet_default","name","content","Container_default","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","key"],"mappings":"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","file":"component---src-templates-category-jsx-174339be2c302943d796.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class CategoryTemplate extends React.Component {\r\n  render() {\r\n    const { category } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout>\r\n        <div className=\"category-container\">\r\n          <Helmet\r\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\r\n          />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"temp23\", // Site title.\r\n  siteTitleShort: \"temp23\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"Temptemp3's blog\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://temptemp3.github.io\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"Articles written by Temptemp3\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"UA-104620931-1\", // GA tracking ID.\r\n  disqusShortname: \"temptemp3\", // Disqus shortname.\r\n  postDefaultCategoryID: \"blog\", // Default category for posts.\r\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\r\n  userName: \"\", // Username to display in the author segment.\r\n  userEmail: \"\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\r\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: \"GitHub\",\r\n      url: \"https://github.com/temptemp3\",\r\n      iconClassName: \"fa fa-github\"\r\n    }\r\n  ],\r\n  copyright: \"Copyright Â© 2019. temptemp3\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React, { Component } from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nexport default class MyNavbar extends Component {\r\n  render() {\r\n    return <>\r\n<Navbar bg=\"light\" expand=\"lg\" fixed={this.props.fixed}>\r\n  <Navbar.Brand onClick={()=>{navigate(\"/\")}}>\r\n  {config.siteTitle}\r\n  </Navbar.Brand>\r\n</Navbar>\r\n    </>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\nimport MyNavbar from \"../components/MyNavbar/MyNavbar\"\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n      <MyNavbar />\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n\t<Container className=\"pt-3\">\r\n\t  {children}\r\n\t</Container>\r\n\t<footer className=\"p-3 float-right\">\r\n\t  &copy; Nicholas Shellabarger\r\n\t</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <Link to={post.path} key={post.title}>\r\n            <h2>{post.title}</h2>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}