{"version":3,"sources":["webpack:///C:/Users/test/Desktop/temptemp3.github.io/src/pages/index.jsx","webpack:///C:/Users/test/Desktop/temptemp3.github.io/data/SiteConfig.js","webpack:///C:/Users/test/Desktop/temptemp3.github.io/src/components/MyNavbar/MyNavbar.js","webpack:///C:/Users/test/Desktop/temptemp3.github.io/src/layout/index.jsx","webpack:///C:/Users/test/Desktop/temptemp3.github.io/node_modules/url-join/lib/url-join.js","webpack:///C:/Users/test/Desktop/temptemp3.github.io/src/components/PostListing/PostListing.jsx","webpack:///C:/Users/test/Desktop/temptemp3.github.io/src/components/SEO/SEO.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","tags","tagsGroup","group","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_8__","to","map","el","tag","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","MyNavbar","react_default","Fragment","Navbar_default","bg","expand","fixed","Brand","onClick","navigate","MainLayout","children","MyNavbar_MyNavbar","Helmet_default","name","content","Container_default","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","i","component","TypeError","push","str","join","parts","split","normalize","arguments","call","undefined","__webpack_require__","PostListing","getPostList","postList","forEach","postEdge","path","node","fields","slug","frontmatter","cover","date","excerpt","timeToRead","post","gatsby__WEBPACK_IMPORTED_MODULE_2__","key","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","type","JSON","stringify","property"],"mappings":"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","file":"component---src-pages-index-jsx-064ac063203dc244c949.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, navigate } from \"gatsby\"\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    const tags = this.props.data.tagsGroup.group\r\n    return (\r\n      <Layout>\r\n        <div className=\"container index-container\">\r\n          <Helmet title={config.siteTitle} />\r\n          <SEO />\r\n          <PostListing postEdges={postEdges} />\r\n\t  <div><Link to={`/categories/blog/`}>blog</Link></div>\r\n\t  {tags.map(el=><div><Link to={`/tags/${el.tag}/`}>{el.tag}</Link></div>)}\r\n\t  \r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    tagsGroup: allMarkdownRemark {\r\n      group(field: frontmatter___tags) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [fields___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"temp23\", // Site title.\r\n  siteTitleShort: \"temp23\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"Temptemp3's blog\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://temptemp3.github.io\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"Articles written by Temptemp3\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"UA-104620931-1\", // GA tracking ID.\r\n  disqusShortname: \"temptemp3\", // Disqus shortname.\r\n  postDefaultCategoryID: \"blog\", // Default category for posts.\r\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\r\n  userName: \"\", // Username to display in the author segment.\r\n  userEmail: \"\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\r\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: \"GitHub\",\r\n      url: \"https://github.com/temptemp3\",\r\n      iconClassName: \"fa fa-github\"\r\n    }\r\n  ],\r\n  copyright: \"Copyright © 2019. temptemp3\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React, { Component } from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nexport default class MyNavbar extends Component {\r\n  render() {\r\n    return <>\r\n<Navbar bg=\"light\" expand=\"lg\" fixed={this.props.fixed}>\r\n  <Navbar.Brand onClick={()=>{navigate(\"/\")}}>\r\n  {config.siteTitle}\r\n  </Navbar.Brand>\r\n</Navbar>\r\n    </>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\nimport MyNavbar from \"../components/MyNavbar/MyNavbar\"\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n      <MyNavbar />\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n\t<Container className=\"pt-3\">\r\n\t  {children}\r\n\t</Container>\r\n\t<footer className=\"p-3 float-right\">\r\n\t  &copy; Nicholas Shellabarger\r\n\t</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <Link to={post.path} key={post.title}>\r\n            <h2>{post.title}</h2>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}